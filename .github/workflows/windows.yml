name: Windows

on:
  pull_request: null
  workflow_dispatch:
    inputs:
      myCommit:
        description: Commit SHA1
        required: false
        default: ''
        type: string
  push:
    branches:
      - master
  release:
    types:
      - published

env:
  DEPS_VERSION: r1

jobs:
  build_windows:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        architecture:
          - x86
          - x86_64
    steps:
      - name: Inject Slug/Short Variables
        uses: rlespinasse/github-slug-action@v4

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: '${{inputs.myCommit}}'

      - name: Setup Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: '${{matrix.architecture}}'

      - name: Setup msys
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          install: make yasm zip

      - name: Variables
        shell: msys2 {0}
        run: |
          echo "ZIP_NAME=windows_${{matrix.configuration}}_${{matrix.architecture}}.zip" >> $GITHUB_ENV

      # Ironically, this is what the official build guide is recommending to do:
      # https://trac.ffmpeg.org/wiki/CompilationGuide/MSVC
      - name: Drop link.exe
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit
        run: |
          rm -rf /usr/bin/link.exe
          which link.exe

      - name: Build
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit
        run: |
          ./scripts/build_all.sh -j4 ${{matrix.configuration}} ${{matrix.architecture}} repos "${{env.ZIP_NAME}}"

      - name: Print Info
        shell: msys2 {0}
        env:
          MSYS2_PATH_TYPE: inherit
        run: |
          ./scripts/print_info.sh

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: 'deps_${{env.DEPS_VERSION}}_${{env.GITHUB_REF_NAME_SLUG}}'
          files: '${{env.ZIP_NAME}}'
